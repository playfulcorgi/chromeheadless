// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var Puppeteer = require("puppeteer");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var ThumbnailNotCreated = Caml_exceptions.create("Screenshot-NewProject.ThumbnailNotCreated");

var maybeBrowserPromise = /* record */[/* contents */undefined];

function getBrowser(param) {
  var match = maybeBrowserPromise[0];
  if (match !== undefined) {
    return Caml_option.valFromOption(match);
  } else {
    var newBrowserPromise = Puppeteer.launch({
          args: /* array */[
            "--no-sandbox",
            "--disable-gpu"
          ]
        });
    var newBrowserInstance = Caml_option.some(newBrowserPromise);
    maybeBrowserPromise[0] = newBrowserInstance;
    return newBrowserPromise;
  }
}

function takeScreenshot(url, fullPage, width, height) {
  return getBrowser(/* () */0).then((function (browser) {
                  return browser.newPage().then((function (page) {
                                return page.setViewport({
                                                    width: width,
                                                    height: height,
                                                    isMobile: true,
                                                    deviceScaleFactor: 2
                                                  }).then((function (param) {
                                                    return page.goto(url);
                                                  })).then((function (param) {
                                                  return new Promise((function (resolve, param) {
                                                                setTimeout((function (param) {
                                                                        return resolve(undefined);
                                                                      }), 2000);
                                                                return /* () */0;
                                                              }));
                                                })).then((function (param) {
                                                return page.screenshot({
                                                            path: undefined,
                                                            fullPage: fullPage
                                                          });
                                              })).then((function (buffer) {
                                              return page.close().then((function (param) {
                                                            return Promise.resolve(buffer);
                                                          }));
                                            }));
                              }));
                })).catch((function (error) {
                console.log("Error creating thumbnail", error);
                return Promise.reject([
                            ThumbnailNotCreated,
                            /* () */0
                          ]);
              }));
}

function takeScreenshotDefault(url) {
  return takeScreenshot(url, false, 480, 480);
}

var P = 0;

var CH = 0;

exports.P = P;
exports.CH = CH;
exports.ThumbnailNotCreated = ThumbnailNotCreated;
exports.maybeBrowserPromise = maybeBrowserPromise;
exports.getBrowser = getBrowser;
exports.takeScreenshot = takeScreenshot;
exports.takeScreenshotDefault = takeScreenshotDefault;
/* puppeteer Not a pure module */
